" ----------Prettyification---------- "
set number
set ruler
color slate
set guifont=Lucida_Console:h10:b:cANSI
set showcmd
set wildmenu
set scrolloff=5
set hlsearch
set incsearch
set ai
set si
set bg=dark
syntax on
filetype indent plugin on
set ts=8 et sw=4 sts=4

" ----------Remapping---------- "
" Open and Close Folds
inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf
" Close ALL Folds
map <F10> zM

" ----------SMD Syntax---------- "
if expand('%:e') == 'ntmd'
    filetype off
    syntax match ntmdCommand1 /^[ \t]*[$].*/ 
    syntax region ntmdCommand2 start=/^[ \t]*[$]/ end=/#/ oneline
    syntax region ntmdCodeBlock start=/```O/ end=/```C/
    syntax region ntmdDefinition start=/^[ \t]*[>]/ end=/[:]/ oneline
    syntax match ntmdFold1 /{{{ [#]\{1,3\}/
    syntax match ntmdFold2 /}}} [#]\{1,3\}/

    hi def link ntmdCommand1     Operator
    hi def link ntmdCommand2     Operator
    hi def link ntmdCodeBlock    Structure 
    hi def link ntmdDefinition   Statement
    hi def link ntmdFold1        Title
    hi def link ntmdFold2        Title

    " TimeStamp
    map <F5> <C-R>=strftime("%Y-%m-%d-%H:%M:%S")<CR>
    imap <F5> <C-R>=strftime("%Y-%m-%d-%H:%M:%S")<CR>
    
    " Fold argument
    setlocal foldmethod=marker foldmarker={{{,}}}
    
    " Type FOLD and then space in insert mode, and a Fold will be created.
    ab FOLD {{{ #FOLD<CR><CR><CR>}}} #

endif

" ----------Experimental---------- "

"" vim -c 'call InitMission("Squid","Enduring Freedom",["172.16.0.5","1.1.1.1","172.16.0.3","5.5.36.3"])' /opt/cannon.ntmd
" function! InitMission(OperatorName, OpName, IPList)
" 	call AddHeader(a:OperatorName, a:OpName)
" 	let TIndex = 1
" 	for Targ in a:IPList
" 		call AddTarget(TIndex,Targ)		
" 		let TIndex += 1
" 	endfor
" 	exe "normal! zMgg"	
" endfunction

" call AddTarget("5","2.2.2.2")
" function! AddTarget(TargNum,TargIP)
"	exe "normal! i<details><!---T" . a:TargNum . " " . a:TargIP . "-->\<CR><summary>T" . a:TargNum . " " . a:TargIP . "</summary>\<CR>\<CR>| On Target | Vet Complete | Off Target |\<CR>| --- | --- | --- |\<CR>| | | |\<CR>\<CR>---\<CR></details>\<CR>\<ESC>"
" endfunction

" " :call AddFolds(["Names","Of","Folds"]) and the named folds will be created
" function! AddFolds(FoldName)
"     for FoldName in a:FoldName
"         exe "normal! i<details><!---" . FoldName . "-->\<CR><summary>" . FoldName . "</summary>\<CR>\<CR>\<CR></details>\<CR>"
"     endfor
" sdfasdf     exe "normal! \<Up>zMza"
" endfunction

" function! AddHeader(OperatorName, OpName)
" 	exe "normal! i# Operation " . a:OpName . "\<CR>## Mission Admin\<CR><details><!---Name and Date-->\<CR><summary>Name and Date</summary>\<CR>\<CR>| Operator Name | Date |\<CR>| --- | --- |\<CR>|" . a:OperatorName . " |  " . strftime("%Y-%m-%d-%H:%M:%S") . " |\<CR></details>\<CR><details><!---Scheme of Maneuver-->\<CR><summary>Scheme of Maneuver</summary>\<CR>\<CR>```\<CR>\<CR>\<CR>```\<CR></details>\<CR><details><!---Mission Plan-->\<CR><summary>Mission Plan</summary>\<CR>\<CR>```\<CR>\<CR>```\<CR></details>\<CR>\<CR>## Targets\<CR>\<ESC>"
" endfunction

