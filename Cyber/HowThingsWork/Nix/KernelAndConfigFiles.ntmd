---
tags:
---
{{{ ###Nomenclature

## General

> FD: (File Descriptor) unsigned integer used by a process to identify an open file (or other resource)

> inode: (Index Node) (File Metadata) Data structure in a Unix-style file system that describes a file-system object such as a file or a directory
	- Each inode stores:
		- Disk Block Location
		- Attributes:
			- Change Time?
			- Access Time
			- Modify Time?
			- Owner
			- Permissions
> Daemon: a Linux or UNIX program that runs in the background.
	- Almost all daemons have names that end with the letter "d"

## Commands To be Familiar With

	> chmod: (Change Mode) Used to change the access permissions of file system objects

	> chown: (Change Owner) Used to change owning user and/or group (files)

	> dmesg: (Display message or driver message) show Kernel ring buffers

	> insmod: (Insert Module) Insert Module to kernel 

	> lsmod: (List Loaded Modules) List which loadable kernel modules are currently loaded

	> make: utility for building and maintaining groups of programs
		- Uses makefiles

	> modinfo: (Module Info) display's information about a Linux Kernel module

	> modprobe: (Module Probe) Loads and unloads kernel modules
		- Udev relies upon modprobe to load drivers for automatically detected hardware

	> pmap: (Process Map) reports the memory map of a process or processes

	> strace: (System Trace) monitor and tamper with interactions between processes and the Linux kernel
		- made possible by the kernel feature known as ptrace

	> sysctl: (system Control) reads and modifies the attributes of the system kernel
		- Attributes like:
			- version number
			- maximum limits
			- security settings
			
	> truss: makes it possible to print out the system calls made by and the signals received by this executable command-line argument.
		
	> uname: (Unix Name) Prints name, version, and details about the machine and OS.

}}} ###

{{{ ###History

> Unix: (Uniplex Information and Computing System) Any OS that generally conforms to POSIX
	- Many OS's are "unix-like" but are not actually Unix 
> POSIX: (Portable Operating System Interface) Set of standards to uniformify
> SUS: (Single UNIX Specification) Succesor of POSIX

- sysv and BSD is the first split
- POSIX brought them back together
- If you want to be UNIX, you need to pay a licensing fee to "The Open Group"
	- Other wise the OS can only be "UNIX-Like"

OS	name			| Owner	| Decendent of	| Posix Compliant?
---					| ---	| ---			| ---
Solaris/SUN OS 5.x 	| SUN	| SYSV			| YES
AIX					| IBM	| SYSV			| YES
HP-UX				| HP 	| SYSV			| YES
MAC OS X			| Apple	| BSD			| YES
Linux				| Open	| GNU			| YES-ish (UNIX Like)
FreeBSD				| Open	| BSD			| YES-ish (UNIX Like)
NetBSD				| Open	| BSD			| YES-ish (UNIX Like)
OpenBSD				| Open 	| BSD			| YES-ish (UNIX Like)


}}} ###

{{{ ###Kernel Basics

> Kernel: acts as the heart of the OS and provides the core functionality of a UNIX operating system

> Kernel Space: area of virtual memory where the Kernel code runs

> User Space: area of virtual memory where the User Processes run
	- User space programs make requests of the OS through system calls
	
## Kernel Functions

	### Manage Resources: Manages how resources are shared amongst processes.
		- Examples:
			- Kernel scheduler allocates CPU cycles to different processes
			- Memory management allocates RAM to processes
			- File subsystem manages concurrent device access.

	### Mediate Processes: mediates all process interaction with system resources as well as the interaction between processes. 
		
	### Provide Abstraction Layer: minimizes the need for processes to know hardware specifics. 
		- For each device in the system, the kernel has a device driver, or code, that understands how to interact with that device at an electrical level
		- User processes can only access system resources via systemcalls
	
}}} ###

{{{ ###System Calls

> System Calls: fundamental interface between an application and the Linux kernel.

## File Operations
	> open(): allocates resources associated to the file, and returns a handle that the process will use to refer to that file
	> read(): attempts to read up to *x* bytes from file descriptor into the buffer starting at buf (Returned value in strace is number of bytes read)
	> write(): writes up to *x* bytes from the buffer
	> close(): Closes a file descriptor (So it may be reused)

## Process Manipulation
	> fork():
	> execve(): Executes Program by pathname
		- pathname must be either a binary executable, or a script (#!)
	> kill():
	
## Memory Operations
	> mmap(): (memory map) requests a segment of memory for the process to use.
	> calloc(): allocates the memory and also initializes the allocated memory block to zero
	> malloc(): allocates memory block of given size (in bytes) and returns a pointer to the beginning of the block
		- malloc() doesnâ€™t initialize the allocated memory
	> free(): allows you to release or deallocate the memory blocks which are previously allocated by calloc()
	> munmap():
	> mprotect():
		
## Data movement
	> socket(): creates an endpoint for communication and returns a file descriptor that refers to that endpoint.
	> send(): used to transmit a message to another socket
		- Similar
			> sendto():
			> sendmsg():
	> recv(): used to receive messages from a socket
		- Similar
			> recvfrom():
			> recvmsg():

## Other
	> chmod(): (Change Mode) Changes file mode bits (permissions) via pathname
		> fchmod(): chmod() via file descriptor 
	> chown(): (Change Owner) Changes the ownership of the file via Pathname
		> fchown(): chown() via file descriptor
		> lchown(): chown() and does not dereference symbolic links
	> access(): Checks if process has permission to access a file.
	> fstat(): (File status) looks for file info such as rights, owner, size. (done via FD)

}}} ###

{{{ ###System Call Tools

 	> strace: (System Trace) monitor and tamper with interactions between processes and the Linux kernel
		- made possible by the kernel feature known as ptrace
		$ strace -o output.txt echo "Yeet for the cannon"	

	> truss: (Solaris version of strace) makes it possible to print out the system calls made by and the signals received by this executable command-line argument.
		$ truss -o output.txt echo "Yeet for the cannon"	
	


}}} ###

{{{ ###Configuration Files

	- File-Based Authorization
		- /etc/passwd
		- /etc/group
		- /etc/login.conf

	- Network-Based Authorization
		- /etc/pam.d/*
		- /etc/krb5.conf
		- /etc/samba/*
		- /etc/bind/named.conf		

	- Network Configuration
		- /etc/hosts
		- /etc/nsswitch.conf
		- /etc/resolv.conf
		- /etc/sysconfig/network

		
## Boot Config Files

		
		
## Kernel Config Files 
	- /etc/sysctl.conf
	- Modules to be loaded into kernel at boot 
		- /etc/modules
		- /etc/modules.conf
		- /etc/sysconfig/modules 
		- /boot/loader.conf 	# BSD 





## Service Config Files








}}} ###

{{{ ###Fun Facts

	- Windows startup and running config are equal (assuming that the registry is written to disk in time of a change)
	- Linux startup and running config are not equal
		- EXCEPTIONS:
			- Linux Network Manager







}}} ###
















