{{{ ###Tactical Forensic Analysis
	- Groups we are worried about
		- Malicious actors
		- System Administrators
		- Careless users

	- Phases:
		> Triage: identifying a candidate list of potentially suspicious processes and programs.
			- Potentially anomalous running processes
			- Unknown, unexpected, or otherwise anomalous network connections
			- Potentially anomalous programs on the disk
			- Any other indicators of out-of-the-ordinary behavior or activity (on a Windows OS this generally means examining the registry keys)
		> Prosecution: gather as much information as possible about each anomaly
			- Prosecution of a Windows OS, on the other hand, generally entails determining the specific actions, behaviors, and origins of the identified anomalous processes and connections, as well as a whole host of other details. 

	> Trusted Tools: uploaded to a target to avoid using tools an attacker may have modified.

}}} ###
{{{ ###Triage Class Notes 
	- System Charachterization 
		$ date
		$ uname -a
		$ w
		$ last
		$ uptime
		$ cat /proc/cpuinfo #Solaris $ psrinfo -v
		$ vmstat
		$ hostname
		$ ifconfig -a
		$ arp -an 
		$ netstat -rn 
		
	- Processes
		$ ps -efH 	#Solaris $ ptree && ps -ef 
		> Start From Unexpected Location: 
			- /tmp
			- /home/username
			- ! @{/bin|/sbin} 
		> Start Sooner than Expected:
		> Possess Unusual Options or Arguments:
		> Possess Unexpected Ancestors:
		> Run by Unexpected Users:
			- @{httpd|sendmail} running as root
		> Strange Names:
			- "sshd "
			- ...

	- Network Connections
		$ netstat -natup	#Solaris $ netstat -anP tcp && netstat -anP udp 	# cd /proc; for p in `find * -type d -prune`; do pfiles $p | grep port >> /tmp/ports && echo PID: $p /tmp/ports;done 

	- Disk Check
		- /bin /home /usr /var /tmp
		> UserSpace Init Files: /etc/inittab, rc.sysinit, rc.local, rc scripts
		> Init Scripts: 
		> Scheduled Tasks: 
			- Services 
				- crond
				- anacron
				- atd 	(At Daemon)
			- Files 
				- /etc/crontab 
				- user crontabs 
					$ for user in $(cut -f1 -d: /etc/passwd); do echo $user >> /tmp/crontabs; crontab -u $user -l >> /tmp/crontabs; done
				- /var/spool/at 	#atd jobs
		> Login Scripts:
			- bashrc and the alike

}}} ###
{{{ #Class Example
w
date 
date -u 
id 
uname -a 
hostname 
sestatus 
ps -ef --sort start_time	# ps -elf 		# ps auxwww
ifconfig -a
netstat -natup 
netstat -rn 
arp -v 
df -h 	#Hard Drive utilization 
df -i 	#Inode Utilization
ls -latrd /etc/cron*					#read all files 
ls -latr /var/spool/cron /var/spool/at 	#read all files 
- User Dirs 
	ls -latr /root/ 
	ls -latr /home/
	ls -latr /home/*
	ls -latr /export/home/ 
	ls -latr /export/home/*
	
	vim .bash_history 
	vim .history
	#find .history .bash_history that is not empty...
- General Dirs 
	ls -latr /tmp 
	ls -latr / 
- Binaries 
	ls -latr /bin
	ls -latr /sbin
	ls -latr /usr/bin 
	ls -latr /usr/sbin
	ls -latr /usr/local/bin
	ls -latr /usr/local/sbin 
- logging 
	ls -latr /var/log /var/log/audit 	#syslog, rsyslog, auditd 	#All these logging locations 	
	last -i 
	
}}} #

	
	